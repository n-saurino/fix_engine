feat(fix-message): Implement CRTP-based FIXMessage framework and initial messages

Designed and implemented a FIXMessage framework using Curiously Recurring Template Pattern (CRTP) to achieve compile-time polymorphism, improving efficiency and type safety. Successfully constructed Logon and NewOrderSingle FIX messages, setting the foundation for further message handling improvements.

Changes:
- Implemented a CRTP-based FIXMessage framework for compile-time polymorphism.
- Created and validated Logon and NewOrderSingle FIX messages.
- Established a structured approach for building and extending FIX message types.

Next steps:
- Implement validation checks to prevent malformed messages and buffer overflows.
- Develop a memory pool for `FIXBuffer` objects to improve memory efficiency.
- Complete implementations for remaining core FIX messages (Heartbeat, Logout, etc.).
- Build the FIX Message Parser for structured message interpretation.
- Optimize FIX message construction using `memcpy` and formatting tricks for performance gains.

Authored and reviewed by: Nigel Saurino