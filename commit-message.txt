test(memory): Add tests for templated MemoryPool and validate correctness

Updated the testing framework to support the newly templated `MemoryPool` implementation. The refactored `MemoryPool` passed the full suite of unit tests, confirming the correctness of the stack-based free list and compile-time capacity design introduced in the previous commit.

Changes:
- Updated the test framework to support the templated `MemoryPool`.
- Confirmed that `MemoryPool` passes the full suite of validation tests.

Next steps:
- Evaluate design alternatives for `FIXBuffer`'s internal buffer pointer. Current use of `char*` complicates deallocation through `MemoryPool::Free()`; this may be addressed in the upcoming FIXMessage framework refactor.
- Add thread-local support for the `MemoryPool` to isolate allocations by thread.
- Integrate an `LFQueue` to pass FIX message buffer pointers from the application's thread-local memory pool to the TX Network Handler thread.
- Integrate a second `LFQueue` to return deallocation-bound FIX message buffer pointers from the TX Network Handler thread to the application thread.

Authored and reviewed by: Nigel Saurino